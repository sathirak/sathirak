name: 'feat: updated readme'

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  update-readme:
    runs-on: ubuntu-latest

    env:
      START_MARKER: "<!-- start-daily-update -->"
      END_MARKER: "<!-- end-daily-update -->"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get weather for AWS regions
        id: weather
        run: |
          declare -A REGION_CITY_MAP=(
            [us-east-1]="Washington DC"
            [us-west-1]="San Francisco"
            [eu-west-1]="Dublin"
            [ap-southeast-1]="Singapore"
            [ap-northeast-1]="Tokyo"
            [eu-central-1]="Frankfurt"
            [sa-east-1]="Sao Paulo"
            [ca-central-1]="Toronto"
            [ap-south-1]="Mumbai"
            [ap-northeast-2]="Seoul"
            [me-south-1]="Dubai"
            [af-south-1]="Cape Town"
            [eu-north-1]="Stockholm"
            [ap-east-1]="Hong Kong"
            [eu-west-3]="Paris"
            [ap-south-2]="Colombo" 
          )
          get_weather() {
            city="$1"
            encoded_city=$(jq -rn --arg x "$city" '$x|@uri')
            curl -s "https://wttr.in/${encoded_city}?format=%t|%C" | tr -d '\n'
          }
          get_emoji() {
            cond="$1"
            case "$cond" in
              *rain*|*Rain*) echo "🌧️";;
              *cloud*|*Cloud*) echo "☁️";;
              *sun*|*Sun*|*clear*|*Clear*) echo "☀️";;
              *snow*|*Snow*) echo "❄️";;
              *storm*|*Storm*) echo "⛈️";;
              *fog*|*Fog*) echo "🌫️";;
              *) echo "🌡️";;
            esac
          }
          for REGION in "${!REGION_CITY_MAP[@]}"; do
            CITY="${REGION_CITY_MAP[$REGION]}"
            RAW=$(get_weather "$CITY")
            TEMP=$(echo "$RAW" | cut -d'|' -f1 | xargs)
            COND=$(echo "$RAW" | cut -d'|' -f2 | xargs)
            if [ -z "$TEMP" ]; then TEMP="N/A"; fi
            EMOJI=$(get_emoji "$COND")
            VAR=$(echo "$REGION" | tr '[:lower:]' '[:upper:]' | tr '-' '_')
            echo "${VAR}_TEMP=${TEMP}" >> $GITHUB_ENV
            echo "${VAR}_COND=${COND}" >> $GITHUB_ENV
            echo "${VAR}_EMOJI=${EMOJI}" >> $GITHUB_ENV
          done

      - name: Set daily update block
        id: setblock
        run: |
          updated_on="<!-- Updated on $(date -u) -->"
          cat <<EOF > block.txt
          ${START_MARKER}
          <div align="center">
            $updated_on<br><br>
          
            <kbd>us-east-1</kbd> ${US_EAST_1_TEMP} ${US_EAST_1_EMOJI} &nbsp; 
            <kbd>us-west-1</kbd> ${US_WEST_1_TEMP} ${US_WEST_1_EMOJI} &nbsp; 
            <kbd>eu-west-1</kbd> ${EU_WEST_1_TEMP} ${EU_WEST_1_EMOJI} &nbsp; 
            <kbd>ap-southeast-1</kbd> ${AP_SOUTHEAST_1_TEMP} ${AP_SOUTHEAST_1_EMOJI} <br>
          
            <kbd>ap-northeast-1</kbd> ${AP_NORTHEAST_1_TEMP} ${AP_NORTHEAST_1_EMOJI} &nbsp; 
            <kbd>eu-central-1</kbd> ${EU_CENTRAL_1_TEMP} ${EU_CENTRAL_1_EMOJI} &nbsp; 
            <kbd>sa-east-1</kbd> ${SA_EAST_1_TEMP} ${SA_EAST_1_EMOJI} &nbsp; 
            <kbd>ca-central-1</kbd> ${CA_CENTRAL_1_TEMP} ${CA_CENTRAL_1_EMOJI} <br>
          
            <kbd>ap-south-1</kbd> ${AP_SOUTH_1_TEMP} ${AP_SOUTH_1_EMOJI} &nbsp; 
            <kbd>ap-northeast-2</kbd> ${AP_NORTHEAST_2_TEMP} ${AP_NORTHEAST_2_EMOJI} &nbsp; 
            <kbd>me-south-1</kbd> ${ME_SOUTH_1_TEMP} ${ME_SOUTH_1_EMOJI} &nbsp; 
            <kbd>af-south-1</kbd> ${AF_SOUTH_1_TEMP} ${AF_SOUTH_1_EMOJI} <br>
          
            <kbd>eu-north-1</kbd> ${EU_NORTH_1_TEMP} ${EU_NORTH_1_EMOJI} &nbsp; 
            <kbd>ap-east-1</kbd> ${AP_EAST_1_TEMP} ${AP_EAST_1_EMOJI} &nbsp; 
            <kbd>eu-west-3</kbd> ${EU_WEST_3_TEMP} ${EU_WEST_3_EMOJI} &nbsp; 
            <kbd>ap-south-2</kbd> ${AP_SOUTH_2_TEMP} ${AP_SOUTH_2_EMOJI}
          </div>
          ${END_MARKER}
          EOF

      - name: Update README.md
        run: |
          new_content="$(cat block.txt)"
          if grep -q "$START_MARKER" README.md && grep -q "$END_MARKER" README.md; then
            awk -v start="$START_MARKER" -v end="$END_MARKER" -v new="$new_content" '
              BEGIN {inblock=0}
              $0 ~ start {print new; inblock=1; next}
              $0 ~ end {inblock=0; next}
              !inblock {print}
            ' README.md > README.tmp && mv README.tmp README.md
          else
            printf "\n%s\n" "$new_content" >> README.md
          fi

      - name: "feat: updated readme"
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git commit -m "	feat: updated readme" || echo "No changes to commit" 

      - name: "feat: updated readme"
        run: |
          git push origin HEAD:main
